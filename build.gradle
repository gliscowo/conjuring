plugins {
    id 'fabric-loom' version '1.7-SNAPSHOT'
    id 'maven-publish'
}

version = "${project.mod_version}+${project.minecraft_base_version}"
group = project.maven_group

sourceSets {
    testmod {
        runtimeClasspath += main.runtimeClasspath
        compileClasspath += main.compileClasspath
    }
}

loom {
    accessWidenerPath = file("src/main/resources/conjuring.accesswidener")

    runs {
        testmodClient {
            client()
            name "Testmod Client"
            source sourceSets.testmod
        }
        testmodServer {
            server()
            name "Testmod Server"
            source sourceSets.testmod
        }
    }
}

repositories {
    // rei
    maven { url "https://maven.shedaniel.me/" }

    // modmenu
    maven { url "https://maven.terraformersmc.com" }

    // owo-lib, lavender
    maven { url 'https://maven.wispforest.io/releases/' }

    mavenLocal()
}

dependencies {
    //to change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    // Fabric API. This is technically optional, but you probably want it anyway.
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    modCompileOnly "me.shedaniel:RoughlyEnoughItems-api-fabric:${project.rei_version}"
    modCompileOnly "me.shedaniel:RoughlyEnoughItems-default-plugin:${project.rei_version}"
    modLocalRuntime "me.shedaniel:RoughlyEnoughItems-fabric:${project.rei_version}"

    modImplementation "com.terraformersmc:modmenu:${project.modmenu_version}"

    modImplementation "io.wispforest:lavender:${project.lavender_version}"

    modImplementation annotationProcessor("io.wispforest:owo-lib:${project.owo_version}")
    include "io.wispforest:owo-sentinel:${project.owo_version}"

    testmodImplementation sourceSets.main.output
}

base {
    archivesName = project.archives_base_name
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.release = 21
}

java {
    withSourcesJar()

    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
}

jar {
    from("LICENSE") {
        rename { "${it}_${base.archivesName.get()}"}
    }
}
